plugins {
	id 'groovy'
	id 'jacoco'
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}
subprojects {

	apply plugin : 'java'
	apply plugin : 'io.spring.dependency-management'
	apply plugin : 'java-library'
	apply plugin : 'groovy'
	apply plugin : 'jacoco'

	group 'com.savantdegrees'
	version '1.0-SNAPSHOT'

	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	repositories {
		mavenCentral()
		maven { url 'https://jitpack.io' }
		maven { url 'https://plugins.gradle.org/m2/' }
	}


	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:2.7.0")
		}
	}
	dependencies {
		testImplementation 'org.spockframework:spock-core:2.2-M1-groovy-3.0'
		testImplementation 'org.spockframework:spock-spring:2.2-M1-groovy-3.0'
		testImplementation 'net.datafaker:datafaker:1.4.0'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation "org.testcontainers:testcontainers:${testContainerVersion}"
		testImplementation "org.testcontainers:junit-jupiter:${testContainerVersion}"
		testImplementation "org.testcontainers:spock:${testContainerVersion}"
	}

	test {
		useJUnitPlatform()
		finalizedBy jacocoTestReport
	}

	jacocoTestReport {
		dependsOn test // tests are required to run before generating the report
		afterEvaluate {
			classDirectories.setFrom(files(classDirectories.files.collect {
				fileTree(dir : it,
						exclude : ['**/*MapperImpl.*',])
			}))
		}
	}

	compileGroovy {
		groovyOptions.configurationScript = file("GroovyConfig.groovy")
	}

	compileGroovy.groovyOptions.javaAnnotationProcessing = true
}
